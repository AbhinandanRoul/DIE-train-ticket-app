pipeline {
    agent any
    tools {
      jdk 'jdk8'
      maven 'maven-3.6.1'        
    }
    stages {

      // At this stage, the jar artifacts are first built using maven, and then the docker images are built.
      stage('Build') {
        steps {
          echo "Build..."
          sh 'mvn clean package -Dmaven.test.skip=true'
          echo "Package Successful!"

          // sh 'sudo /usr/local/bin/docker-compose build'
          echo "Building images Successful!"
        }
      }

      // TODO: This stage will perform unit tests, etc.
      stage('Test') {
        steps {
          echo "Test..."
          sh 'mvn test'
          echo "Test Successful"
		
	  echo "P3C-PMD"
          sh "mvn pmd:pmd"
	
	  jacoco(
		execPattern: 'target/jacoco.exec',
		classPattern: 'target/classes',
		sourcePattern: 'src/main/java',
		changeBuildStatus: true,
		minimumMethodCoverage:'30',maximumMethodCoverage:'70',
		minimumClassCoverage:'30',maximumClassCoverage:'70'
		
	  )

          // sh 'mvn clean'
	  // sh 'sudo /bin/bash ./jenkins-ci/clean.sh'
        }
      }

    }
	
    post {
        always {
            pmd(canRunOnFailed: true, pattern: '**/target/pmd.xml')
	        junit testResults: "**/target/surefire-reports/*.xml"
        }
	failure {
	    mail from : 'jenkinsx@163.com', 
		 to : '1989153584@qq.com',
	         subject : "Failed Pipeline: ${currentBuild.fullDisplayName} :(", 
	         body : "Something is wrong with ${env.BUILD_URL}"
	}
    }
}
